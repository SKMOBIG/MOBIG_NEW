<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link href='http://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900' rel='stylesheet' type='text/css'>

    <% include ./partials/css.ejs %>

    <% include ./partials/script.ejs %>
  <script src="vendor/nestable/jquery.nestable.js"></script>
  <script src="vendor/select2/dist/js/select2.js"></script>

  <script type="text/javascript">

    var ITEM_MAX_SIZE = 10;  // 선택가능 갯수

    NMap = function(){
      this.map = new Object();
     };
    NMap.prototype = {   
      put : function(key, value){   
          this.map[key] = value;
      },
      putMap : function(key, value){
        this.map[key] = value.map;
      },
      putMapList : function(key, value){
        var list = new Array();
        for(var i=0;i<value.length;i++){
         list.push(value[i].map);
        }
        this.map[key] = list;
      },
      get : function(key){   
          return this.map[key];
      },
      containsKey : function(key){    
        return key in this.map;
      },
      containsValue : function(value){    
        for(var prop in this.map){
         if(this.map[prop] == value) return true;
        }
        return false;
      },
      isEmpty : function(key){    
        return (this.size() == 0);
      },
      clear : function(){   
        for(var prop in this.map){
         delete this.map[prop];
        }
      },
      remove : function(key){    
        delete this.map[key];
      },
      keys : function(){
          var keys = new Array();
          for(var prop in this.map){
              keys.push(prop);
          }
          return keys;
      },
      values : function(){   
        var values = new Array();   
          for(var prop in this.map){   
            values.push(this.map[prop]);
          }   
          return values;
      },
      size : function() {
      var count = 0;
      for (var prop in this.map) {
         count++;
      }
      return count;
      },
      jsonString: function(){
        return JSON.stringify(this.map);    
      }
    };

    // 선택된 아이템Map
    var itemMap = new NMap();  
    var item = new NMap();  
    
    // 아이템 조회
    function getAdminList(){

  			$.ajax({
  				type: "get",
  				url: "/getAdminList",
  				data: {
  				},
  				success: function(data) {
  				  // 아이템세팅
  					adminList = data.itemList;
  				},
  				error: function(e) {
  					alert(e.responseText);
  				}
  			});
    }
    
    function save(){
      
      // validation check
      // null chk

      var editRows = document.getElementsByClassName("editRows");
      var row = new Object();
      var allRow = new Array();
      
      $('.editRows').each(function (index, element) {
        row = new Object();
        row.table_nm = $(element).find('.fileNm').text();
        row.column_nm = $(element).find('.colNm').text();
        row.category_grp_dtl_id = $(element).find('.dtlId').text();
        row.category_grp_dtl_nm = $(element).find('.dtlNm').text();
        // row.category_grp_id = $(element).find('.grpId').text();
        row.category_grp_nm = $(element).find('.grpNm').text();
        allRow.push(row);
      })
      var testRow = new Object();
      testRow = JSON.parse(JSON.stringify(row));
      testRow.category_grp_dtl_id = $('.nono').text();
      
      allRow.push(testRow);
      console.log(allRow);
      console.log(allRow.length);
      
      // 확인 MSG
      if(!confirm("변경 사항을 저장하시겠습니까?")){
        return;
      }

      // commit
			$.ajax({
        dataType: "json",
				type: "post",
				url: "/saveList",
				data: {
				  saveList : allRow
				},
				success: function(data) {
          // edit NO
          editYN(false);
				},
				error: function(e) {
					editYN(true);
					alert('Ajax 전송 실패 : ' + e.responseText);
				}
			});
			

    }
    
    function addRow(addBtn) {
      var $this = $(addBtn);
      var newRow = "<tr class=\"editRows\">"+
                        "<td class=\"noedit\">"+
                          "<input type=\"button\" class=\"addDelBtn\" value=\"+\" onClick=\"addRow(this);\"/> "+
                          "<input type=\"button\" class=\"addDelBtn\" value=\"-\" onClick=\"delRow(this);\"/>"+
                        "</td>"+
                        "<td class=\"edit\"></td>"+
                        "<td class=\"edit\"></td>"+
                        "<td class=\"noedit\"></td>"+
                        "<td class=\"edit\"></td>"+
                        "<td class=\"edit\"></td>"+
                    "</tr>";
      $this.parent().parent().after(newRow);
      editYN(true);      
    }
    
    // 선택 삭제
    function delRow(delBtn) {
      var $this = $(delBtn);
      $this.parent().parent().hide();
    }
    
    function editYN(flag){
      var editRows = document.getElementsByClassName("editRows");
      var noeditables = document.getElementsByClassName("noedit");
      var addDelBtn = document.getElementsByClassName("addDelBtn");
      
      if(flag == true){    // EDITABLE Yes
        
        for(var i=0;i<editRows.length;i++){
          editRows[i].contentEditable = 'true';
        }
        // row 안의 noeditable은 고정.
        for(var j=0;j<noeditables.length;j++){
          noeditables[j].contentEditable = 'false';
        }
        // addDelBtn Yes
        $(".addDelBtn").show();     
          
      } else {             // EDITABLE No
        for(var i=0;i<editRows.length;i++){
          editRows[i].contentEditable = 'false';
        }
        // addDelBtn No
        $(".addDelBtn").hide();
      }

    }
    
  </script>
  
  <script>
    // 페이지로딩시 카테고리 display
    // $(document).ready(function() { closeBar(); getAdminList(); });
    
    $(document).ready(function(){ editYN(false); });
  </script>
  
  <style>
    /*강제 CSS*/
    .editables td {
      padding:2px !important;
      height:15px !important;
    }
    .addDelBtn {
      height:20px;
      width:10px;
    }
    
  </style>
  
</head>
<body>

<!-- Wrapper-->
<div class="wrapper">

	<!-- Header/Navigation -->
	<% include ./partials/navigation.ejs %>

    <!-- Main content-->
    <section class="content">
            <div class="container-fluid">
              
              <div class="row">
                <div class="col-lg-12">
                    <div class="view-header">
                        <div class="pull-right text-right" style="line-height: 14px">
                            <small>App Pages<br>Basic<br> <span class="c-white">Contacts</span></small>
                        </div>
                        <div class="header-icon">
                            <i class="pe page-header-icon pe-7s-users"></i>
                        </div>
                        <div class="header-title">
                            <h3>Setting Page</h3>
                            <small>
                                CRUD for Data Items 
                            </small>
                        </div>
                    </div>
                    <hr>
                </div>
              </div>

              <table id ="adminTable" class="table table-bordered" style="table-layout:fixed;">
                  <thead>
                  <tr>
                      <th style="width:10%;" >추가/삭제</th>
                      <th style="width:15%;" >파일명</th>
                      <th style="width:25%;" >칼럼명</th>
                      <th style="width:10%;" >칼럼번호</th>
                      <th style="width:20%;" >칼럼상세</th>
                      <th style="width:10%;" >분류</th>
                  </tr>
                  </thead>
                  <tbody>
                    <% if (itemList != null){ %>
                     <% for (var i=0; i<itemList.length; i++) { %>
                        <tr class="editRows">
                            <td class="noedit">
                              <input type="button" class="addDelBtn" value="+" onClick="addRow(this);"/>  
                              <input type="button" class="addDelBtn" value="-" onClick="delRow(this);"/> 
                            </td>
                            <td class="edit fileNm"><%= itemList[i].table_nm %></td>
                            <td class="edit colNm"><%= itemList[i].column_nm %></td>
                            <td class="noedit dtlId"><%= itemList[i].category_grp_dtl_id %></td>
                            <td class="edit dtlNm"><%= itemList[i].category_grp_dtl_nm %></td>
                            <td class="edit grpNm"><%= itemList[i].category_grp_nm %></td>
                        </tr>
                     <% } %>
                    <% } else { %>
                        <tr class="editRows">
                            <td class="noedit">
                              <input type="button" class="addDelBtn" value="+" onClick="addRow(this);"/>  
                              <input type="button" class="addDelBtn" value="-" onClick="delRow(this);"/> 
                            </td>
                            <td class="edit nono"></td>
                            <td class="edit"></td>
                            <td class="noedit"></td>
                            <td class="edit"></td>
                            <td class="edit"></td>
                        </tr>
                    <% } %>
                  </tbody>
              </table>
                      <button id="editYes" type="button" onClick="editYN(true);">Edit</button>
                      <button id="editNo" type="button" onClick="editYN(false);">EditNo</button>
                      <button id="saveBtn" type="button" onClick="save();">Save</button>
                      <button id="cancelBtn" type="button" onClick="window.location.reload();">Cancel</button>
            </div>
    </section>
    <!-- End main content-->

</div>
<!-- End wrapper-->



</body>
